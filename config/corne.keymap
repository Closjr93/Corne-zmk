/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        ATF: ATF {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(A) &kp LS(F) &kp LS(T) &kp LS(E) &kp LS(A) &kp LS(T) &kp LS(F) &kp RET &kp LS(I) &kp N &kp V &kp O &kp I &kp C &kp E &kp COLON>;
            label = "ATF";
        };

        Password: Password {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(E) &kp L &kp E &kp N &kp AT &kp LS(C) &kp A &kp R &kp L &kp N0 &kp S &kp N1 &kp N1 &kp N1 &kp N0>;
            label = "PASSWORD";
        };

        Lock: Lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(L) &kp KP_ENTER>;
            label = "LOCK";
        };

        unlock: unlock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LC(LA(DELETE))>;
            label = "UNLOCK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E             &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp CLCK   &kp A  &kp S  &kp D             &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LEFT_CONTROL  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        Lower {
            bindings = <
&trans  &trans  &trans  &kp LC(LA(PLUS))  &trans     &ATF         &kp PLUS   &kp N7  &kp N8         &kp N9  &kp KP_MULTIPLY  &kp DEL
&trans  &trans  &trans  &trans            &trans     &trans       &kp MINUS  &kp N4  &kp N5         &kp N6  &kp KP_DIVIDE    &trans
&trans  &trans  &trans  &trans            &Password  &trans       &kp N0     &kp N1  &kp N2         &kp N3  &kp EQUAL        &trans
                        &trans            &trans     &kp SPACE    &kp ENTER  &trans  &kp LA(LCTRL)
            >;
        };

        Upper {
            bindings = <
&trans      &trans  &trans  &trans  &trans  &Lock      &trans  &trans          &kp UP_ARROW  &trans     &trans  &trans
&bt BT_NXT  &trans  &trans  &trans  &trans  &unlock    &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans  &trans
&bt BT_CLR  &trans  &trans  &trans  &trans  &trans     &trans  &trans          &trans        &trans     &trans  &trans
                            &trans  &trans  &trans     &trans  &trans          &trans
            >;
        };
    };
};
